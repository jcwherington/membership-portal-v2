events {}

http {
    init_by_lua_block { require "cjson" }
    add_header Content-Type application/json;
    resolver 127.0.0.11;

    map $uri $upstream_url {
        ~^/applications "http://application-api:8080/2015-03-31/functions/function/invocations";
        ~^/membership "http://membership-api:8080/2015-03-31/functions/function/invocations";
    }

    server {
        listen 80;
        server_name localhost;

        location ~ ^/(applications|membership)/(\d+)$ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'x-api-key';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            access_by_lua_block {
                local cjson = require "cjson"
                local id = ngx.re.match(ngx.var.uri, "[0-9]+")[0]
                ngx.req.read_body()

                local data = {
                    httpMethod = ngx.var.request_method,
                    body = ngx.req.get_body_data() or {},
                    pathParameters = {
                        id = id
                    }
                }

                local body = cjson.encode(data)
                ngx.req.set_body_data(body)
            }

            proxy_method POST;
            proxy_pass $upstream_url;
        }

        location ~ /(applications|membership) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'x-api-key';

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            access_by_lua_block {
                local cjson = require "cjson"
                ngx.req.read_body()

                local data = {
                    httpMethod = ngx.var.request_method,
                    body = ngx.req.get_body_data() or {},
                    pathParameters = {}
                }

                local body = cjson.encode(data)
                ngx.req.set_body_data(body)
            }

            proxy_method POST;
            proxy_pass $upstream_url;
        }
    }
}
